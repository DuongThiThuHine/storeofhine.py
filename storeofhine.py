import streamlit as st
import pandas as pd
import os
import hashlib
import urllib.parse
import requests

# Ki·ªÉm tra t·ªáp CSV c√≥ t·ªìn t·∫°i kh√¥ng
file_path = 'san_pham_tien_loi_100.csv'
if not os.path.exists(file_path):
    st.error("‚ö†Ô∏è Error: File 'san_pham_tien_loi_100.csv' not found. Please upload it to GitHub.")
else:
    # Load the product data
    df_products = pd.read_csv(file_path, encoding='latin1')


    # Initialize session state for cart
    if 'cart' not in st.session_state:
        st.session_state.cart = []

    # Title of the web page
    st.title("üõçÔ∏è Products are available at our convenience store, please feel free to shop.")

    # Loop through the products and display them
    for index, row in df_products.iterrows():
        # Ki·ªÉm tra n·∫øu c·ªôt 'Product' c√≥ t·ªìn t·∫°i
        if 'Product' not in row:
            continue  # B·ªè qua n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu s·∫£n ph·∫©m
        
        st.subheader(row['Product'])
        st.write(f"üí∞ Price: {row.get('Price (VND)', 'N/A')} VND")
        st.write(f"üì¶ Category: {row.get('Product Type', 'Unknown')}")

        # Hi·ªÉn th·ªã ·∫£nh s·∫£n ph·∫©m (ki·ªÉm tra n·∫øu ƒë∆∞·ªùng d·∫´n h·ª£p l·ªá)
        if isinstance(row.get('Image', ''), str) and row['Image'].startswith('http'):
            st.image(row['Image'], caption=row['Product'], use_container_width=True)
        else:
            st.warning("üö´ No image available for this product.")

        # Ki·ªÉm tra n·∫øu 'ID' t·ªìn t·∫°i, n·∫øu kh√¥ng s·ª≠ d·ª•ng index ƒë·ªÉ tr√°nh l·ªói
        key_value = row['ID'] if 'ID' in row else f"cart_{index}"
        
        if st.button(f"üõí Add {row['Product']} to Cart", key=key_value):
            st.session_state.cart.append(row['Product'])
            st.success(f"{row['Product']} added to your cart!")

    # Display Cart in Sidebar
    st.sidebar.header("üõí Your Cart")
    if st.session_state.cart:
        st.sidebar.write(", ".join(st.session_state.cart))
    else:
        st.sidebar.write("Your cart is empty.")
        
    # Product Payment
    
    # C·∫•u h√¨nh VNPAY API
    VNPAY_URL = "https://sandbox.vnpayment.vn/paymentv2/vpcpay.html"
    VNPAY_TMNCODE = "AAHR0SYM"
    VNPAY_HASHSECRET = "7I1TU9VLX9UJ8LYXX4SGKBBGN3BIS9LD"
    RETURN_URL = "https://storeofhine.streamlit.app"  # URL trang c·ªßa b·∫°n
    
    # H√†m t·∫°o URL thanh to√°n VNPAY
    def create_payment_url(order_id, amount):
        params = {
            "vnp_Version": "2.1.0",
            "vnp_Command": "pay",
            "vnp_TmnCode": VNPAY_TMN_CODE,
            "vnp_Amount": int(amount) * 100,  # Chuy·ªÉn ƒë·ªïi sang ƒë∆°n v·ªã VNƒê
            "vnp_CurrCode": "VND",
            "vnp_TxnRef": order_id,
            "vnp_OrderInfo": f"Thanh to√°n ƒë∆°n h√†ng {order_id}",
            "vnp_Locale": "vn",
            "vnp_ReturnUrl": VNPAY_RETURN_URL,
            "vnp_CreateDate": "20250317120000",  # ƒê·ªãnh d·∫°ng YYYYMMDDHHmmss
        }
        
        # S·∫Øp x·∫øp tham s·ªë theo th·ª© t·ª± alphabet
        sorted_params = sorted(params.items())
        query_string = urllib.parse.urlencode(sorted_params)
    
        # T·∫°o chu·ªói ch·ªØ k√Ω HMAC SHA512
        sign_data = query_string + VNPAY_HASH_SECRET
        secure_hash = hashlib.sha512(sign_data.encode()).hexdigest()
        
        # T·∫°o URL thanh to√°n
        payment_url = f"{VNPAY_URL}?{query_string}&vnp_SecureHash={secure_hash}"
        return payment_url
    
    # Giao di·ªán Streamlit
    st.title("C·ª≠a h√†ng tr·ª±c tuy·∫øn - Thanh to√°n VNPAY")
    
    # Nh·∫≠p th√¥ng tin ƒë∆°n h√†ng
    order_id = st.text_input("Nh·∫≠p m√£ ƒë∆°n h√†ng", "123456")
    amount = st.number_input("Nh·∫≠p s·ªë ti·ªÅn thanh to√°n (VND)", min_value=1000, value=50000, step=1000)
    
    # N√∫t t·∫°o thanh to√°n
    if st.button("T·∫°o thanh to√°n"):
        payment_url = create_payment_url(order_id, amount)
        st.success("Click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ thanh to√°n:")
        st.markdown(f"[üîó Thanh to√°n ngay]({payment_url})", unsafe_allow_html=True)
